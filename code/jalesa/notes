Comprehensions.md

names = ['David', 'Helen', 'Anne']

# multiply every number in the list by 2 if the number is odd.
numbers = [1, 2, 3, 4, 5]
doubled_odds = [n * 2 for n in numbers if n % 2 == 1]


# 
[[1 if col == row else 0 for col in range(0, 3) ] for row in range(0, 3) ]

[[1, 0, 0],
 [0, 1, 0],
 [0, 0, 1]]

# if and else are a pair
# for and in are a pair
[n - 9 if n > 9 else n for n in new_one]

# LAB 20
# enumerate saves a counter and whatever is in the list.
# you wont see the results of enumerate unless you use list()

7 & 10 docs FUNCTIONS

# when something is a method it will change whats on the left
# of the dot ex: x = fruits.append('cherry')
fruits = ['apple', 'banana', 'pear']
x = fruits.append('cherry')
print(x) # None
print(fruits) # ['apple', 'banana', 'pear', 'cherry']

Defining Functions
# pure function does not use anything outside the
#  function except for parameters.
# global variables wont work because its defined outside of loop
# advantages of pure FUNCTIONS
# self contained chunks if you have an error you wont
# have to go through 200 lines of code you only go through
# lines within the function.

DICTIONAIRIES
#access dictionairy with collection and 
total = sum(collection[first_card], collection[second_card], collection[third_card])
print(total)


